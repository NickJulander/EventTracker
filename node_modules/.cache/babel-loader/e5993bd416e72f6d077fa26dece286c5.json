{"ast":null,"code":"var _jsxFileName = \"/Users/nickjulander/Documents/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport React from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n      console.log(data);\n    };\n\n    fetchTasks();\n  });\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 100000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask,\n      onClick: setShowAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nickjulander/Documents/react-task-tracker/src/App.js"],"names":["useState","useEffect","Header","React","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","res","fetch","data","json","console","log","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAC7C,KAD6C,CAA9C;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAE,EAAF,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAJD;;AAKAH,IAAAA,UAAU;AACX,GAPQ,CAAT;;AASA,QAAMO,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,IAAqC,CAAhD;AACA,UAAMC,OAAO,GAAG;AAACJ,MAAAA,EAAD;AAAK,SAAGD;AAAR,KAAhB;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBV,IAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BV,IAAAA,QAAQ,CAACD,KAAK,CAACmB,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EAAE,CAACV,IAAI,CAACU;AAA3B,KAAjB,GAAyDV,IAA7E,CAAD,CAAR;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,MAAMX,cAAc,CAAC,CAACD,WAAF,CAApC;AAAoD,MAAA,OAAO,EAAEA;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEW,OAAhB;AAAyB,MAAA,OAAO,EAAEV;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFlB,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,KAAd;AAAqB,MAAA,QAAQ,EAAEgB,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApCD;;GAAMrB,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport React from 'react'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState\n  (false)\n  const [tasks, setTasks] = useState ([])\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n      console.log(data)\n    }\n    fetchTasks()\n  })\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd ={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} onClick={setShowAddTask}/>}\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}