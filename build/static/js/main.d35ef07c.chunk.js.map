{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d35ef07c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n  return (\n    <div>\n      <button onClick={onClick}\n        style={{backgroundColor: color}}\n        className='btn'\n      >\n      {text}\n      </button>\n    </div>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue'\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd}) => {\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'}  onClick={onAdd}/>\n\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Events',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n}\n\n\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n      <h3>\n        {task.text} {' '}\n        <FaTimes\n          style={{color: 'red', cursor: 'pointer'}}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if(!text){\n      alert('Please add a task')\n      return\n    }\n    onAdd({text, day, reminder})\n    setText('')\n    setDay('')\n    setReminder('')\n  }\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input type='text' placeholder='Add Task'\n        value={text} onChange={(e) => setText(e.target.value)}></input>\n\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input type='text' placeholder='Add Day & Time'\n        value={day} onChange={(e) => setDay(e.target.value)}></input>\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddTask\n","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport React from 'react'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState\n  (false)\n  const [tasks, setTasks] = useState ([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:3000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await(res.json())\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 100000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'DELETE',\n\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n          'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    )\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd ={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} onClick={setShowAddTask}/>}\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}